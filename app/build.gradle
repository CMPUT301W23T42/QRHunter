plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.example.qrhunter'
    compileSdk 33

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    defaultConfig {
        applicationId "com.example.qrhunter"
        minSdk 19
        targetSdk 33
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
        unitTests.returnDefaultValues = true
    }
}

task createJavadocs (type: Javadoc)
{
    source = android.sourceSets.main.java.srcDirs
    options.linkSource true
    doFirst {
        failOnError false
        destinationDir = new File("${projectDir}/doc")

        classpath += project.files(project.android.getBootClasspath().join(File.pathSeparator))
        android.applicationVariants.collect { variant ->
            classpath += files(variant.javaCompileProvider.get().classpath.files)
            classpath += files("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar")
        }
        options.addStringOption "-show-members", "package"
        options.links("http://d.android.com/reference/")
    }
}

dependencies {
    //JAVADOC
    //implementation files('C:\\Users\\DCastro\\AppData\\Local\\Android\\Sdk\\platforms\\android-33\\android.jar')

    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-firestore:24.4.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.databinding:library:3.2.0-alpha11'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0' //QR SCANNER
    implementation("com.google.guava:guava:31.1-jre") //SHA-256
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    testImplementation 'org.testng:testng:6.9.6'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'com.jayway.android.robotium:robotium-solo:5.2.1'
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'



    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.2.3')

    // Add the dependency for the Cloud Storage library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-storage'

    //google maps package
    implementation 'com.google.android.gms:play-services-maps:18.1.0'

}